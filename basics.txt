 cd ~DownloadsReacthello-world
 npm install
 npm start
 REACT
 Open source library for building user interfaces
 It is a JavaScript Library not a framework
 FOCUS on UI-User Interface
 Has a rich Ecosystem
 Why learn React ?
 It is a project which is created and maintained by Facebook
 Technical Aspects of React -;
 *Has a component based architecture => let us break down an application into small encapsulated parts and used to compose more complex UI
 *Reusable Code
  eg:code for article component of react can be reused for article component of angular and vue
 *React is declarative => tell react what you want and react will build the actual UI
 Imperative means we should explicitly specify each step and we control the flow... 
 * react will handle efficiently updating and rendering of the components when data changes
 *DOM updates are handled
 *Can seamlessly integrate react into any application(portion of page, or complete page or even an entire application itself)\
 react native for mobile application

creating React Applications ->react app package
 1) Using npx -;
 npx create-react-app <project-name>
 npx => It is a npm package runner and it's get installed when you install "node"
 2) Using npm
 In which we install the create-react-app package globally and then use the package to generate projects -:
 install the package globally using the command -;
 npm install create-react-app -g
 create-react-app<project name>



 Folder structure of react application created using "create react app"

 package.json => it contains the dependencies and the scripts required for the project
 node_modules folder => All the dependencies are installed here and it is generated when we run the create react app command or npm install
 public folder => contains 3 files => manifest.json is concerned with progressive web apps (not needed), index.html => It is the only html file that is in our application and not going to make any changes excpet some changes in the head tag
 the index.html have 1 div tag with the id="root" at run time the react application takes over this div tag and is resposible for the UI
 src folder => we will be working with this folder during development =>
   starting point for react application is index.js, In index.js we specify the root component which is app component and the DOM element which will be controlled by react
   App.js => responsible for the HTML displayed in the browser(view which we see in the browser) 
   App.css => for styling ->contains the classes in the app component
   App.test.js => for unit tests -> contains simple test case
   index.css => apply styles to the body
   logo.svg => which is referenced in the app component
   (serviceWorker.js => concerned with progressive web apps)

   Control flow when we run the application
   run command npm start -> index.html is served in the browser (index.html contains the root DOM node) ->control enters the index.js (react DOM renders the app component on to the root DOM node) ->App component contains the HTML will displayed in the browser

   COMPONENT =; building blocks of any react applications
   In react the component represents a part of the user interface  
   root component is there to contain every other component and it is usually named as "app component" in the application
   All the components are used to make up the entire application
   Components are also reusable and can be nested inside other components
   Same components are used with different properties to display different information

   How a component translate the code in the application
   The component code is usually placed in a JS file
   Can also have component files with .jsx extensions
   In react there are 2 component types -;


   1)Stateless Functional Component(Functional Components);
 SFC are literally JS functions 
 They can optionally receive an object of properties which is referred to as props
 and they return HTML(JSX) which describes the UI
 [FUNCTIONAL COMPONENTS ARE JS FUNCTIONS THAT ACCEPTS AN INPUT OF PROPERTIES AND RETURNS HTML THAT DESCRIBES THE UI]


   2)Stateful Class Component (class components)
   regular es6 "classes that extend the component class" from the react library
    They can optionally receive an object of properties which is referred to as props
   They must contain a render method that returns HTML and they return HTML(JSX) which describes the UI
   Apart from props a class component can maintain a private internal state => it can maintain some information which is private to that component and use that information to describe the user interface



   FUNCTIONAL COMPONENTS                                                                                                          Greet.js

   Use Func components as much as possible
   Absence of 'this' keyword
   Solution without using state
   mainly responsible for UI
   thsi is why it is also called StatelessDumbpresentational

     Provides lifecyle hooks(note)


   Vs CLASS COMPONENTS                                                                                                            Welcome.js
   More feature rich
   Maintain their own private data - state
   Contain complex UI login
   Provides lifecyle hooks
   Also called as StatefulSmartContainer

   The HTML we returned through 3 components are not regular HTML they are called JSX

   JSX                                                                                                                          Hello.js
  JavaScript XML(JSX) - Extension to the JavaScript language syntax
With react library, it is an extension to write XML-like code for elements and components
 like XML, JSX tags have a tag name, attributes, and children.
 JSX is not a necessity to write React applications
 JSX makes your react code simpler and elegant
 JSX transpiles to pure JavaScript which is understood by the browsers


 JSX Differences
 Class -> className
 for -> htmlFor
 camelCase property naming convention
  onclick -> onClick ,  tabindex => tabIndex

 COMPONENT STATE in REACT
 every react component returns JSX 

 PROPS  Vs
 props get passed to the component
 Function parameters
 Props are immutable
 props => functional component
 this.props => Class Components



 STATE
 managed within the component
 Variables declared in the function body
 state can be changed
 useState Hook - Functional Components
 this.state - Class Components
 privately maintained inside the component and also it can influence what can rendered in the browser

 setState
 Always make use of setState and never modify the state directly 
 Code has to be executed after the state has been updated ? Place that code in the call back function which is the second argument to the setState method
 When you have to update state based on the previous state value, pass in a funvtion as an argument instead of the regular object. 

Destructuring props in Functional component
1) Destructure it in the function parameter itself
2)Destructure it in the function body

Destructuring props/states in Class Component => Using render method


React Events

camelCase for the event
specify a function or a method  within curly brace
(React events are named using camelCase rather than lowercase
function to onClick is note passed as string , use {} and no parenthesis for function in the functioncall)


Binding Event Handlers in React Components
"this"ckeyword within the event handler is undefined, so event binding is necessary in class components

Ways to bind Event Handlers in React
1) Use the bind keyword and bind it in the render method
2) Arrows in the render method => Simply call the event handler in the  arrow function body
3) Binding the event handler in the constructor as opposed to binding in the render method
4) Arrow function as a class property


Methods as props in  react components
Define the method in the Parent Component
On the child component tag pass the method as a prop(in parent)
In the child Component access the method using the props object


How to Pass a parameter when calling the parent method from the child Component
Arrow function in the return statement is used
arrow function syntax is the simplest way to pass parameters from the child component to the parent component

Conditional Rendering  
works in the same way as the conditions work in JavaScript
1) if/else 
2) Element Variables
      use JavaScript variables to store elements and help to render the entire component or only a part of the component as well
3) Ternary conditional operator
      It can be used inside the JSX
4) Short circuit operator
  specific case of ternary operator approach, when you want to render something or nothing short-circuit-operator is used

How to display some list in React(in HTML we repeat some code for each item in the list) LIST RENDERING

map() => accepts a function as an argument , map method goes over each element in the array and apply a transformation specified in the function body

arr.map(para => function to be performed)

When we have a list of objects with a few properties that have to be rendered
Refactot the JSX into a seperate component and then use the component in the map method JSX   => person,personList

Lists and Keys
A "key" is a special string attribute you need to include when creating list of elements
Keys give the element a stable identity
Keys help React which items have changed, are added, or are removed.
Help in efficient update of user interface

How to use the index as a key when rendering lists
The index is given as second parameter to the arrow function within the map method and that index is used as a value to the key prop

Index as Key
(when to use index as a key)

1)The items in your list do not have a unique id.
2)The list is a static list and will not change.
3)The list will never be reordered or filtered.

Styling React Components

ways to style react components
1)Regular CSS stylesheets
2)Inline styling
3)CSS modules
4)CSS in JS Libraries (styled components)
